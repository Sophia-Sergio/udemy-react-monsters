{"version":3,"sources":["components/search-box/search-box.component.jsx","components/card/card.component.jsx","components/card-list/card-list.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["SearchBox","placeholder","onChange","className","type","Card","props","alt","src","ele","id","name","email","CardList","elements","map","App","handleChange","e","setState","searchField","target","value","state","monsters","fetch","then","response","json","users","this","filteredMonsters","filter","monster","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAKaA,EAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,SAAf,OACvB,uBACEC,UAAU,SACVC,KAAK,SACLH,YAAaA,EACbC,SAAUA,KCPDG,G,YAAO,SAACC,GAAD,OAClB,sBAAKH,UAAU,iBAAf,UACE,qBAAKI,IAAI,UAAUC,IAAG,+BAA0BF,EAAMG,IAAIC,GAApC,4BACtB,mCAAyBJ,EAAMG,IAAIE,OAA1BL,EAAMG,IAAIC,IACnB,kCAAKJ,EAAMG,IAAIG,cCHNC,EAAW,SAAAP,GAAK,OAC3B,qBAAKH,UAAU,YAAf,SACGG,EAAMQ,SAASC,KAAI,SAAAN,GAAG,OACrB,cAAC,EAAD,CAAMA,IAAKA,UCmDFO,E,kDApDb,aAAc,IAAD,8BACX,gBAWFC,aAAe,SAACC,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAXrC,EAAKC,MAAQ,CACXC,SAAU,GACVJ,YAAa,IAGfK,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKV,SAAS,CAACK,SAAUK,OAT/B,E,0CAgBb,WACE,MAAkCC,KAAKP,MAA/BC,EAAR,EAAQA,SAAUJ,EAAlB,EAAkBA,YACZW,EAAmBP,EAASQ,QAAO,SAAAC,GAAO,OAC9CA,EAAQtB,KAAKuB,cAAcC,SAASf,EAAYc,kBAElD,OACE,sBAAK/B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWF,YAAY,kBAAkBC,SAAU4B,KAAKb,eACxD,cAAC,EAAD,CAAUH,SAAUiB,W,GA1BVK,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1b13ccc7.chunk.js","sourcesContent":["import React, {useEffect} from 'react';\nimport './search-box.styles.css'\n\n\n\nexport const SearchBox = ({placeholder, onChange}) => (\n  <input\n    className='search'\n    type='search'\n    placeholder={placeholder}\n    onChange={onChange}\n  />\n)\n","import React from 'react';\nimport './card.styles.css'\n\nexport const Card = (props) => (\n  <div className='card-container'>\n    <img alt='monster' src={`https://robohash.org/${props.ele.id}?set=set2&size=180x180`} />\n    <h2 key={props.ele.id}> {props.ele.name}</h2>\n    <p> {props.ele.email}</p>\n  </div>\n)\n","import React from 'react';\nimport './card-list.styles.css'\nimport { Card } from '../card/card.component'\n\nexport const CardList = props => (\n  <div className='card-list'>\n    {props.elements.map(ele => (\n      <Card ele={ele} />\n    ))}\n  </div>\n)\n","import './App.css';\nimport { Component } from 'react';\nimport { SearchBox } from './components/search-box/search-box.component'\nimport { CardList } from './components/card-list/card-list.component'\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({monsters: users}))\n  }\n\n  handleChange = (e) => {\n    this.setState({searchField: e.target.value})\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    )\n    return(\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox placeholder='search monsters' onChange={this.handleChange}/>\n        <CardList elements={filteredMonsters} />\n      </div>\n    )\n  }\n}\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}